Type vs Interface:
Both can be used to describe the shape of an object or a function signature.
key distinction between is that a type cannot be re-opened to add new properties vs an interface which is always extendable.

https://medium.com/@magenta2127/use-which-interface-or-type-alias-in-typescript-bdfaf2e882ae

Which to use according to the above link:

                            interface   type alias
describe obj                yes         no  
extend parent               yes         no
class                       yes         no
declaration merge           yes         no
describe func               no          yes
more than object types      no          yes
with typeof type operator   no          yes

TYPESCRIPT CHEATSHEET:       
https://react-typescript-cheatsheet.netlify.app/docs/basic/getting-started/forms_and_events/

https://bobbyhadz.com/blog/typescript-no-index-signature-with-parameter-of-type-string

https://joyofcode.xyz/typescript-fundamentals

Backend:  @types/cookie-parser
@types/body-parser @types/config @types/cors @types/express @types/node @types/mongoose @types/bcrypt @types/jsonwebtoken ts-node typescript -D

TYPESCRIPT_NODE_STARTER example
https://github.com/microsoft/TypeScript-Node-Starter/tree/master/src



https://www.youtube.com/watch?v=KgnJNJk9-to